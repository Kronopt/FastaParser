name: CI
on: [push]
jobs:

  tests:
    runs-on: ubuntu-latest
    strategy:
      max-parallel: 4
      matrix:
        python-version: ['3.5', '3.6', '3.7', '3.8', '3.9', '3.10']

    steps:
    - name: Checkout branch
      uses: actions/checkout@v3

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        make install-testing-dependencies

    - name: Test
      run: make test

  code_quality:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout branch
      uses: actions/checkout@v3

    - name: Set up Python 3.10
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        make install-dependencies

    - name: Lint
      run: make lint

    - name: Coverage
      run: |
        make coverage
        curl -Os https://uploader.codecov.io/latest/linux/codecov
        chmod +x codecov
        ./codecov -t ${{ secrets.CODECOV_TOKEN }}

  publish:
    needs: [tests, code_quality]
    runs-on: ubuntu-latest

    steps:
    - name: Checkout branch
      uses: actions/checkout@v3

    - name: Set up Python 3.10
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        make install-dependencies

    - name: Build package
      run: |
        make build
        twine check dist/*

    - name: Publish to Test PyPI
      if: github.ref == 'refs/heads/master'
      uses: pypa/gh-action-pypi-publish@release/v1.5
      with:
        password: ${{ secrets.TEST_PYPI_TOKEN }}
        repository_url: https://test.pypi.org/legacy/
        skip_existing: true

    - name: Publish to PyPI
      if: startsWith(github.ref, 'refs/tags')
      uses: pypa/gh-action-pypi-publish@release/v1.5
      with:
        password: ${{ secrets.PYPI_TOKEN }}
